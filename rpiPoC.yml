- name: AWX initial configuration
  hosts: 127.0.0.1
  connection: local
  vars_files:
    - towervars.yml
    - vars.yml
  tasks:
    - name: "Look for PoC file"
      stat:
        path: "{{ playbook_dir }}/projects/RPIProject/sendsensorsdata.py"
      register: pocFile
    - debug: var=pocFile
    - name: "Set PG_HOST"
      lineinfile:
        path: "{{ playbook_dir }}/projects/RPIProject/sendsensorsdata.py"
        regexp: "^PG_HOST =.*"
        line: "PG_HOST = \"{{ pg_sensors_hostname }}\""
        state: present
      when: pocFile.stat.exists
    - name: "Set PG_PASSWORD"
      lineinfile:
        path: "{{ playbook_dir }}/projects/RPIProject/sendsensorsdata.py"
        regexp: "^PG_PASSWORD =.*"
        line: "PG_PASSWORD = \"{{ pg_sensors_password }}\""
        state: present
      when: pocFile.stat.exists
    - name: "Set PG_DATABASE"
      lineinfile:
        path: "{{ playbook_dir }}/projects/RPIProject/sendsensorsdata.py"
        regexp: "^PG_DATABASE =.*"
        line: "PG_DATABASE = \"{{ pg_sensors_database }}\""
        state: present
      when: pocFile.stat.exists
    - name: "Set PG_USERNAME"
      lineinfile:
        path: "{{ playbook_dir }}/projects/RPIProject/sendsensorsdata.py"
        regexp: "^PG_USERNAME =.*"
        line: "PG_USERNAME = \"{{ pg_sensors_username }}\""
        state: present
      when: pocFile.stat.exists
    - name: "Set PG_PORT"
      lineinfile:
        path: "{{ playbook_dir }}/projects/RPIProject/sendsensorsdata.py"
        regexp: "^PG_PORT =.*"
        line: "PG_PORT = \"{{ pg_sensors_port }}\""
        state: present
      when: pocFile.stat.exists
    - name: "Add organization"
      tower_organization:
        name: "{{ tower_org }}"
        state: present
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: "{{ tower_host }}"
        tower_verify_ssl: False
    - name: "Add inventory"
      tower_inventory:
        name: "{{ awx_inventory }}"
        description: "Raspberry PI inventory"
        organization: "{{ tower_org }}"
        state: present
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: "{{ tower_host }}"
        tower_verify_ssl: False
      register: inv
    - name: "Add user"
      tower_user:
        username: "{{ rpi_awx_username }}"
        password: "{{ rpi_awx_password}}"
        email: "{{ rpi_awx_email}}"
        state: present
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: "{{ tower_host }}"
        tower_verify_ssl: False
    - name: "Add role"
      command: "tower-cli role grant --type admin --user {{ rpi_awx_username }} --inventory {{ inv.id }} -u {{ tower_username }} -p {{ tower_password }} -h {{ tower_host }} --insecure"
    - name: "Add credential"
#      tower_credential:
#        name: "RPI Credential"
#        organization: "{{ tower_org}}"
#        kind: ssh
#        state: present
#        ssh_key_data: "{{ playbook_dir }}/keys/awx"
#        tower_username: "{{ tower_username }}"
#        tower_password: "{{ tower_password }}"
#        tower_host: "{{ tower_host }}"
#        tower_verify_ssl: False
#      register: credo
      command: "{{ playbook_dir }}/createCredential.sh"
    - name: "Init git repository"
      shell: "cd {{ playbook_dir }}/projects/RPIProject/ ; git init .; git config user.name \"Commiter\" ; git config user.email \"test@test123.com\" ; git add .; git commit -m \"initial commit\" || true"
    - name: "Add project"
      command: "tower-cli project create --name=RPIProject --organization=\"{{ tower_org }}\" --scm-type=git --scm-url=\"/var/projects/RPIProject\" -u {{ tower_username }} -p {{ tower_password }} -h {{ tower_host }} --insecure"
    - name: "Sleep for 30 seconds to make sure the project is synced"
      pause:
        seconds: 30
    - name: "Setup template"
      command: "tower-cli job_template create --name=\"RPI PoC\" --job-type=\"run\" --inventory={{ inv.id }} --project=\"RPIProject\" --credential=\"RPI Credential\" --playbook=\"rpiTemperature.yml\" -u {{ tower_username }} -p {{ tower_password }} -h {{ tower_host }} --insecure"


